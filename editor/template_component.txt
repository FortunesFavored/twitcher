@tool
extends RefCounted

class_name {class_name}

{for properties as property}
## {property.description}
var {property.name}: {property.type};
{/for}

static func from_json(d: Dictionary) -> {class_name}:
	var result = {class_name}.new();
{for properties as property}
{if property.is_sub_class}
	result.{property.name} = {property.type}.from_json(d["{property.name}"]);
{else}
	result.{property.name} = d["{property.name}"];
{/if}
{/for}
	return result;

func to_dict() -> Dictionary:
	var d: Dictionary = {};
{for properties as property}
{if property.is_sub_class}
	d["{property.name}"] = {property.name}.to_dict();
{else}
	d["{property.name}"] = {property.name};
{/if}
{/for}
	return d;

func to_json() -> String:
	return JSON.stringify(to_dict());

{for classes as class}
{class}

{/for}
